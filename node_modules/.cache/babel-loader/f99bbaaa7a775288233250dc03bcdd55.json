{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/react-login-cloudinary/src/User/Login.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Redirect } from 'react-router-dom';\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      userId: '',\n      redirect: false\n    };\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    fetch('https://mpbinarsiang.herokuapp.com/user/login', {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrer: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }) // body data type must match \"Content-Type\" header\n\n    }).then(response => response.json()).then(data => {\n      // store.set('isLoggedIn', true)\n      localStorage.setItem('isLoggedIn', true);\n      localStorage.setItem('TOKEN', data.data.token);\n      localStorage.setItem('USER', data.data.userId);\n    }).then(() => {\n      this.props.history.push('/');\n    });\n  }\n\n  onChangeUsername(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  onChangePassword(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  render() {\n    if (localStorage.getItem('isLoggedIn') || this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: '/',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Form, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        className: \"mb-2 mr-sm-2 mb-sm-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleEmail\",\n        className: \"mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        onChange: this.onChangeUsername,\n        type: \"text\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        className: \"mb-2 mr-sm-2 mb-sm-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        className: \"mr-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        onChange: this.onChangePassword,\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"don't tell!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/mahendra/Documents/react/react-login-cloudinary/src/User/Login.js"],"names":["React","Button","Form","FormGroup","Label","Input","Redirect","Login","Component","constructor","props","state","username","password","userId","redirect","onChangeUsername","bind","onChangePassword","login","fetch","method","mode","cache","credentials","headers","referrer","body","JSON","stringify","then","response","json","data","localStorage","setItem","token","history","push","event","setState","target","value","render","getItem"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Redirect } from 'react-router-dom'\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      userId: '',\n      redirect: false\n    }\n\n    this.onChangeUsername = this.onChangeUsername.bind(this)\n    this.onChangePassword = this.onChangePassword.bind(this)\n    this.login = this.login.bind(this)\n\n  }\n\n  login() {\n    fetch('https://mpbinarsiang.herokuapp.com/user/login', {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrer: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password\n      }) // body data type must match \"Content-Type\" header\n    }).then(response => response.json())\n      .then(data => {\n        // store.set('isLoggedIn', true)\n        localStorage.setItem('isLoggedIn', true)\n        localStorage.setItem('TOKEN', data.data.token)\n        localStorage.setItem('USER', data.data.userId)\n\n\n      }).then(() => {\n         this.props.history.push('/')\n\n      })\n  }\n\n  onChangeUsername(event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n  onChangePassword(event) {\n    this.setState({\n      password: event.target.value\n    })\n  }\n\n  render() {\n    if (localStorage.getItem('isLoggedIn')|| this.state.redirect) {\n      return (\n        <Redirect to={'/'} />\n      )\n    } else {\n      return (\n        <div>\n          <h1>Login</h1>\n          <Form inline>\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n              <Label for=\"exampleEmail\" className=\"mr-sm-2\">Username</Label>\n              <Input onChange={this.onChangeUsername} type=\"text\" name=\"email\" id=\"exampleEmail\" placeholder=\"username\" />\n            </FormGroup>\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n              <Label for=\"examplePassword\" className=\"mr-sm-2\">Password</Label>\n              <Input onChange={this.onChangePassword} type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"don't tell!\" />\n            </FormGroup>\n            <Button onClick={this.login}>Submit</Button>\n          </Form>\n        </div>\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}