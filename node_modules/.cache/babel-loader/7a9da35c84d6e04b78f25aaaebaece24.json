{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/react-login-cloudinary/src/Product/ProductForm.js\";\nimport React, { createRef } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport ReactDOM from 'react-dom';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nvar dropzoneRef = createRef();\nexport default class ProductForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUploadImages = images => {\n      // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n      const uploads = images.map(image => {\n        // our formdata\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"tags\", '{TAGS}'); // Add tags for the images - {Array}\n\n        formData.append(\"upload_preset\", \"{YOUR_PRESET}\"); // Replace the preset name with your own\n\n        formData.append(\"api_key\", \"{YOUR_API_KEY}\"); // Replace API key with your own Cloudinary API key\n\n        formData.append(\"timestamp\", Date.now() / 1000 | 0); // Replace cloudinary upload URL with yours\n\n        return axios.post(\"https://api.cloudinary.com/v1_1/{CLOUD_NAME}/image/upload\", formData, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(response => console.log(response.data));\n      }); // We would use axios `.all()` method to perform concurrent image upload to cloudinary.\n\n      axios.all(uploads).then(() => {\n        // ... do anything after successful upload. You can setState() or save the data\n        console.log('Images have all being uploaded');\n      });\n    };\n\n    this.state = {};\n  } // This function does the uploading to cloudinary\n\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Nama Produk\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Harga Produk\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"password\",\n      id: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      ref: dropzoneRef,\n      onDrop: this.handleUploadImages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"img\", {\n      style: {\n        width: 100\n      },\n      src: \"https://image.flaticon.com/icons/png/512/3/3901.png\",\n      alt: \"\",\n      srcset: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Sign in\"));\n  }\n\n}","map":{"version":3,"sources":["/home/mahendra/Documents/react/react-login-cloudinary/src/Product/ProductForm.js"],"names":["React","createRef","Col","Row","Button","Form","FormGroup","Label","Input","FormText","ReactDOM","Dropzone","axios","dropzoneRef","ProductForm","Component","constructor","props","handleUploadImages","images","uploads","map","image","formData","FormData","append","Date","now","post","headers","then","response","console","log","data","all","state","render","getRootProps","getInputProps","width"],"mappings":"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","sourcesContent":["import React, {createRef} from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport ReactDOM from 'react-dom';\nimport Dropzone from 'react-dropzone'\nimport axios from 'axios'\n\nvar dropzoneRef = createRef()\n\nexport default class ProductForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={\n\n        }\n    }\n\n\n    // This function does the uploading to cloudinary\n  handleUploadImages = images => {\n    // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n    const uploads = images.map(image => {\n      // our formdata\n      const formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"tags\", '{TAGS}'); // Add tags for the images - {Array}\n      formData.append(\"upload_preset\", \"{YOUR_PRESET}\"); // Replace the preset name with your own\n      formData.append(\"api_key\", \"{YOUR_API_KEY}\"); // Replace API key with your own Cloudinary API key\n      formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n\n      // Replace cloudinary upload URL with yours\n      return axios.post(\n        \"https://api.cloudinary.com/v1_1/{CLOUD_NAME}/image/upload\",\n        formData, \n        { headers: { \"X-Requested-With\": \"XMLHttpRequest\" }})\n        .then(response => console.log(response.data))\n    });\n\n    // We would use axios `.all()` method to perform concurrent image upload to cloudinary.\n    axios.all(uploads).then(() => {\n      // ... do anything after successful upload. You can setState() or save the data\n      console.log('Images have all being uploaded')\n    });\n  }\n  render() {\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"exampleEmail\">Nama Produk</Label>\n              <Input type=\"text\" name=\"email\" id=\"exampleEmail\"  />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"examplePassword\">Harga Produk</Label>\n              <Input type=\"text\" name=\"password\" id=\"examplePassword\" />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n        <Dropzone ref={dropzoneRef} onDrop={this.handleUploadImages}>\n              {({ getRootProps, getInputProps }) => (\n                  <div {...getRootProps()}>\n                      <input {...getInputProps()} />\n                      <img style={{ width: 100 }} src=\"https://image.flaticon.com/icons/png/512/3/3901.png\" alt=\"\" srcset=\"\" />\n                  </div>\n              )}\n          </Dropzone>\n        </FormGroup>\n        \n        <Button>Sign in</Button>\n      </Form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}